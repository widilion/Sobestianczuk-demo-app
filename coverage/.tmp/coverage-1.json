{"C:/Users/Piotrek/Desktop/BootKampf/GUMIAKA/zadanie-gumiaka/src/hooks/updateQuery.ts":{"path":"C:/Users/Piotrek/Desktop/BootKampf/GUMIAKA/zadanie-gumiaka/src/hooks/updateQuery.ts","statementMap":{"0":{"start":{"line":4,"column":16},"end":{"line":4,"column":26}},"1":{"start":{"line":5,"column":17},"end":{"line":5,"column":28}},"2":{"start":{"line":6,"column":20},"end":{"line":11,"column":3}},"3":{"start":{"line":7,"column":18},"end":{"line":7,"column":57}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":44}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":54}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":39}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":21}}},"fnMap":{"0":{"name":"useUpdateQuery","decl":{"start":{"line":3,"column":24},"end":{"line":3,"column":38}},"loc":{"start":{"line":3,"column":41},"end":{"line":13,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":45},"end":{"line":11,"column":3}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":8,"column":43}},"type":"cond-expr","locations":[{"start":{"line":8,"column":14},"end":{"line":8,"column":36}},{"start":{"line":8,"column":39},"end":{"line":8,"column":43}}],"line":8},"1":{"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":53}},"type":"cond-expr","locations":[{"start":{"line":9,"column":12},"end":{"line":9,"column":30}},{"start":{"line":9,"column":33},"end":{"line":9,"column":53}}],"line":9}},"s":{"0":4,"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4},"f":{"0":4,"1":4},"b":{"0":[2,2],"1":[2,2]},"inputSourceMap":{"version":3,"sources":["C:/Users/Piotrek/Desktop/BootKampf/GUMIAKA/zadanie-gumiaka/src/hooks/updateQuery.ts"],"sourcesContent":["import { useRoute } from \"vue-router\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default function useUpdateQuery() {\r\n  const route = useRoute();\r\n  const router = useRouter();\r\n\r\n  let updateQuery = function (newPage?: number, newId?: number | string) {\r\n    let queries = JSON.parse(JSON.stringify(route.query));  ///// tricky, but it has to look like this\r\n    newPage ? (queries.page = newPage) : null;\r\n    newId ? (queries.id = newId) : delete queries[\"id\"];\r\n    router.replace({ query: queries });\r\n  };\r\n\r\n  return updateQuery;\r\n}\r\n"],"mappings":"AAAA,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAE1B,wBAAwB,iBAAiB;AACvC,QAAM,QAAQ,SAAS;AACvB,QAAM,SAAS,UAAU;AAEzB,MAAI,cAAc,SAAU,SAAkB,OAAyB;AACrE,QAAI,UAAU,KAAK,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AACpD,cAAW,QAAQ,OAAO,UAAW;AACrC,YAAS,QAAQ,KAAK,QAAS,OAAO,QAAQ,IAAI;AAClD,WAAO,QAAQ,EAAE,OAAO,QAAQ,CAAC;AAAA,EACnC;AAEA,SAAO;AACT;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"03e437ead92b3eba3bb3a722f421eee8f0f1ec77"}}